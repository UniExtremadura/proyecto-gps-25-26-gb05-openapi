openapi: 3.0.1
info:
  title: UnderSounds - Servicio Estadísticas
  version: 1.0.0
  description: |-
    Especificación OpenAPI para el servicio de estadísticas de UnderSounds.
servers:
  - url: https://www.undersounds.com/api/v1/estadisticas
tags:
  - name: songs
    description: Estadísticas sobre canciones
  
  - name: genres
    description: Estadísticas sobre géneros

  - name: users
    description: Estadísticas sobre usuarios

  - name: artists
    description: Estadísticas sobre artistas
# TODO
# - El top debería ir acompañado de el valor que lo pone en ese lugar
# - Debería haber un endpoint específico para usuarios que en vez de 
#   ir por ID fuera por el JWT.
paths:
# --------------------------------------------------------------------------
# ------------------------------    SONGS    -------------------------------
# --------------------------------------------------------------------------
  /songs/top:
    get:
      tags:
        - songs
      summary: Obtener el top de canciones.
      description: Devuelve el top de canciones según los filtros especificados.
      operationId: getTopSongs
      parameters:
        - name: items
          in: query
          description: Número de elementos (por defecto, 10).
          required: false
          schema:
            type: integer
            format: int64
        - name: filter
          in: query
          description: Filtro por el que ordenar las canciones (por defecto, por visitas).
          required: false
          schema:
            type: string
            default: views
            enum:
              - views
              - plays
              - likes
              - sales
      responses:
        '200':
          description: Canciones obtenidas con éxito.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'schemas/Song.yaml'
        '500':
          description: Error interno.
          content:
            application/json:
              schema:
                $ref: 'schemas/Error.yaml'

  /songs/{id}/stats:
    get:
      tags:
        - songs
      summary: Obtener las estadísticas de una canción por su ID.
      description: Devuelve las estadísticas de la canción con el ID especificado.
      operationId: getSongStatsById
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID de la canción de la que obtener las estadísticas.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Estadísticas de la canción obtenidas con éxito.
          content:
            application/json:
              schema:
                type: object
                properties:
                  views:
                    type: integer
                    format: int64
                  plays:
                    type: integer
                    format: int64
                  likes:
                    type: integer
                    format: int64
                  sales:
                    type: integer
                    format: int64
        '401':
          description: Usuario sin permiso para obtener las estadísticas de la canción.
          content:
            application/json:
              schema:
                $ref: 'schemas/Error.yaml'
        '404':
          description: Canción no encontrada.
        '500':
          description: Error interno.
          content:
            application/json:
              schema:
                $ref: 'schemas/Error.yaml'
# --------------------------------------------------------------------------
# ------------------------------    GENRES    ------------------------------
# --------------------------------------------------------------------------
  /genres/top:
    get:
      tags:
        - genres
      summary: Obtener el top de géneros.
      description: Devuelve el top de géneros según los filtros especificados.
      operationId: getTopGenres
      parameters:
        - name: items
          in: query
          description: Número de elementos (por defecto, 10).
          required: false
          schema:
            type: integer
            format: int64
        - name: filter
          in: query
          description: Filtro por el que ordenar los géneros (por defecto, por visitas).
          required: false
          schema:
            type: string
            default: views
            enum:
              - views
              - plays
              - likes
              - sales
      responses:
        '200':
          description: Géneros obtenidos con éxito.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'schemas/Genre.yaml'
        '500':
          description: Error interno.
          content:
            application/json:
              schema:
                $ref: 'schemas/Error.yaml'
# --------------------------------------------------------------------------
# ------------------------------    USERS    -------------------------------
# --------------------------------------------------------------------------
  /users/top:
    get:
      tags:
        - users
      summary: Obtener el top de usuarios.
      description: Devuelve el top de usuarios según los filtros especificados.
      operationId: getTopUsers
      parameters:
        - name: items
          in: query
          description: Número de elementos (por defecto, 10).
          required: false
          schema:
            type: integer
            format: int64
        - name: filter
          in: query
          description: Filtro por el que ordenar los usuarios.
          required: true
          schema:
            type: string
            default: views
            enum:
              - timeRegistered
              - purchases
              - plays
      responses:
        '200':
          description: Usuarios obtenidos con éxito.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'schemas/UserProfile.yaml'
        '500':
          description: Error interno.
          content:
            application/json:
              schema:
                $ref: 'schemas/Error.yaml'
  # ??????
#  /user/{userId}/songByFilter:
#    get:
#      tags:
#        - user
#      summary: Find the song, influenced by a filter, depending of an user.
#      description: Returns a song that has the most something depending on a filter and on an user. The filter can be numViews, numFavourites and numSales
#      operationId: userSongByFilter
#      parameters:
#      - name: userId
#        in: path
#        description: ID of user to get the song from
#        required: true
#        schema:
#          type: string
#          format: uuid
#      - name: filter
#        in: query
#        description: Filter to search the song by
#        required: true
#        schema:
#          type: string
#          default: numViews
#          enum:
#              - numViews
#              - numFavourites
#              - numSales
#      responses:
#        '200':
#          description: successful operation
#          content:
#            application/json:
#              schema:
#                $ref: 'schemas/Song.yaml'
#            application/xml:
#              schema:
#                $ref: 'schemas/Song.yaml'
#        '400':
#          description: Invalid ID supplied
#        '404':
#            description: Not found
#        default:
#          description: Unexpected error
#          content:
#            application/json:
#              schema:
#                $ref: "schemas/Error.yaml"
#      security:
#        - bearerAuth: []

  /users/{id}/stats:
    get:
      tags:
        - users
      summary: Obtener las estadísticas de un usuario por su ID.
      description: Devuelve las estadísticas del usuario con el ID especificado.
      operationId: getUserStatsById
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: ID del usuario del que devolver las estadísticas.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Estadísticas del usuario obtenidas con éxito.
          content:
            application/json:
              schema:
                type: object
                properties:
                  timeRegistered:
                    type: integer
                    format: int64
                  purchases:
                    type: integer
                    format: int64
                  plays:
                    type: integer
                    format: int64
        '401':
          description: Usuario sin permiso para obtener las estadísticas del usuario.
          content:
            application/json:
              schema:
                $ref: 'schemas/Error.yaml'
        '404':
          description: Canción no encontrada.
        '500':
          description: Error interno.
          content:
            application/json:
              schema:
                $ref: 'schemas/Error.yaml'
# --------------------------------------------------------------------------
# ------------------------------    ARTISTS    -----------------------------
# --------------------------------------------------------------------------
  /artists/top:
    get:
      tags:
        - artists
      summary: Obtener el top de artistas.
      description: Devuelve el top de artistas según los filtros especificados.
      operationId: getTopArtists
      parameters:
        - name: items
          in: query
          description: Número de elementos (por defecto, 10).
          required: false
          schema:
            type: integer
            format: int64
        - name: filter
          in: query
          description: Filtro por el que ordenar los artistas (por defecto, por seguidores).
          required: false
          schema:
            type: string
            default: views
            enum:
              - plays
              - sales
              - followers
              - views
      responses:
        '200':
          description: Artistas obtenidos con éxito.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'schemas/Artist.yaml'
        '500':
          description: Error interno.
          content:
            application/json:
              schema:
                $ref: 'schemas/Error.yaml'

  /artists/{id}/stats:
    get:
      tags:
        - artists
      summary: Obtener las estadísticas de un artista por su ID.
      description: Devuelve las estadísticas del artista con el ID especificado.
      operationId: getArtistStatsById
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: ID del artista del que obtener las estadísticas.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Estadísticas de la canción obtenidas con éxito.
          content:
            application/json:
              schema:
                type: object
                properties:
                  plays:
                    type: integer
                    format: int64
                  sales:
                    type: integer
                    format: int64
                  followers:
                    type: integer
                    format: int64
                  views:
                    type: integer
                    format: int64
                  products:
                    type: integer
                    format: int64
        '401':
          description: Usuario sin permiso para obtener las estadísticas del artista.
          content:
            application/json:
              schema:
                $ref: 'schemas/Error.yaml'
        '404':
          description: Artista no encontrado.
        '500':
          description: Error interno.
          content:
            application/json:
              schema:
                $ref: 'schemas/Error.yaml'